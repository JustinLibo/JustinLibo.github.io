<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>机器学习：聚类</title>
      <link href="/JustinLibo.github.io/2021/03/03/7098.html"/>
      <url>/JustinLibo.github.io/2021/03/03/7098.html</url>
      
        <content type="html"><![CDATA[<h2 id="一-无监督学习"><a href="#一-无监督学习" class="headerlink" title="一.无监督学习"></a>一.无监督学习</h2><h3 id="1-小例"><a href="#1-小例" class="headerlink" title="1.小例"></a>1.小例</h3><p>在说实战之前，我们先来简单说一说机器学习中的无监督学习。举个栗子~~<br> 下面是几张小狗的图片，如果我们让计算机自己把这些图片分成两类，计算机会怎么做呢？<br> <img src="https://img-blog.csdnimg.cn/20200510150523691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20200510150614476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200510150710990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/2020051015073198.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200510150757730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200510150922899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> ps：图片均来源于网络，若有侵权请联系删除，谢谢！</p><p>因为没有明确的分类标准，所以计算机可能会按照不同的方式对这些图片进行分类，比如：</p><ol><li>小狗是站着还是坐着</li><li>小狗脖子处是否有饰品</li><li>小狗是否露出了舌头</li></ol><p>除此之外分类的方式还有很多，从中可以看出无监督学习的一些特点：</p><ol><li>没有对与错（分类方式不唯一）</li><li>寻找数据的共同点从而进行分类（无论采用哪种方式进行分类，同类图片都是有共同点的）</li></ol><p>通过这个简单的例子，下面就来看一看无监督学习的简单定义吧！</p><h3 id="2-简单定义"><a href="#2-简单定义" class="headerlink" title="2.简单定义"></a>2.简单定义</h3><p>无监督学习：机器学习的一种方法，没有给定事先标记过的训练示例，自动对输入的数据进行分类或分群。</p><h3 id="3-优点："><a href="#3-优点：" class="headerlink" title="3.优点："></a>3.优点：</h3><ol><li>算法不受监督信息（偏见）的约束，可能考虑到新的信息<br> 这也就是上例所说的可以按不同方式分类，并没有一个明确的规定</li><li>不需要标签数据，极大程度扩大数据样本<br> 无监督学习不需要标签数据，这样在面临成千上万个数据时可以让计算机自动去分类从而节省大量的人力成本。</li></ol><h3 id="4-主要应用："><a href="#4-主要应用：" class="headerlink" title="4.主要应用："></a>4.主要应用：</h3><p>聚类分析、关联分析、维度缩减等</p><p>这里简单来谈谈聚类分析(对其他应用感兴趣的小伙伴可以自己去找一下相关资料。)</p><h2 id="二-聚类分析"><a href="#二-聚类分析" class="headerlink" title="二.聚类分析"></a>二.聚类分析</h2><h3 id="1-简单定义："><a href="#1-简单定义：" class="headerlink" title="1.简单定义："></a>1.简单定义：</h3><p>聚类分析又称为群分析，是根据对象某些属性的相似度，将其自动划分为不同的类别。</p><h3 id="2-小例："><a href="#2-小例：" class="headerlink" title="2.小例："></a>2.小例：</h3><p>例如：</p><p><img src="https://img-blog.csdnimg.cn/20200510153602871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>一个公司可以根据自己客户几年来的数据把客户分成普通客户、vip客户、svip客户等等。这样就可以根据不同的客户类型进行不同的商业推广啦。</p><p>又比如新闻关联：<br><img src="https://img-blog.csdnimg.cn/20200510154026950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>给定一个关键词，可以把最近有关这个关键词的最新最热新闻推送出来。</p><h3 id="3-常用聚类算法："><a href="#3-常用聚类算法：" class="headerlink" title="3.常用聚类算法："></a>3.常用聚类算法：</h3><ol><li><strong>KMeans聚类</strong><br> 根据数据与中心点距离划分类别<br> 基于类别数据更新中心点<br> 重复过程直到收敛</li></ol><p><strong>特点：实现简单、收敛快；需要指定类别数量（需要告诉计算机要分成几类）</strong></p><ol start="2"><li><strong>均值漂移聚类(Meanshift)</strong><br> 在中心点一定区域检索数据点<br> 更新中心<br> 重复流程到中心点稳定</li></ol><p><strong>特点：自动发现类别数量，不需要人工选择；需要选择区域半径</strong></p><ol start="3"><li><strong>DBSCAN算法(基于密度的空间聚类算法)</strong><br> 基于区域点密度筛选有效数据<br> 基于有效数据向周边扩张，直到没有新点加入</li></ol><p><strong>特点：过滤噪音数据；不需要人为选择类别数量；数据密度不同时影响结果</strong></p><p>因为后面的实战是基于KMeans算法的，所以这里详细说一下KMeans算法，想更多了解其它算法的小伙伴可以去找找相关资料。</p><p><img src="https://img-blog.csdnimg.cn/20200510160437107.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200510160517156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200510160605929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200510160801685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/2020051016084795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>这样可能不太好理解，下面我们来看一看它的执行流程。</p><p><img src="https://img-blog.csdnimg.cn/20200510161018662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><font color='red'> 假设这里把这些点分为两类，在这些点中随机选择两个聚类中心。</font></p><p><img src="https://img-blog.csdnimg.cn/20200510161056561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><font color='red'> 计算每个点到聚类中心的距离，然后将这些点进行分类。 </font></p><p><font color='red'> text </font><img src="https://img-blog.csdnimg.cn/20200510161150831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><font color='red'> 更新聚类中心 </font></p><p><img src="https://img-blog.csdnimg.cn/20200510161302861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><font color='red'> 重新计算每个点到聚类中心的距离并根据新的距离重新分类 </font></p><p><img src="https://img-blog.csdnimg.cn/20200510161413464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><font color='red'> 直至中心不再变化为止。</font></p><p><img src="https://img-blog.csdnimg.cn/20200510161541800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 无监督学习 </tag>
            
            <tag> K-Means </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习联系:房价预测</title>
      <link href="/JustinLibo.github.io/2021/03/03/7096.html"/>
      <url>/JustinLibo.github.io/2021/03/03/7096.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 人工智能基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习之聚类—Kmeans实战</title>
      <link href="/JustinLibo.github.io/2021/03/03/7095.html"/>
      <url>/JustinLibo.github.io/2021/03/03/7095.html</url>
      
        <content type="html"><![CDATA[<h2 id="一-任务"><a href="#一-任务" class="headerlink" title="一.任务"></a>一.任务</h2><ol><li>采用Kmeans算法实现2D数据自动聚类，预测V1=80,V2=60的数据类别</li><li>计算预测准确率，完成结果矫正<br>数据：data.csv</li></ol><h2 id="二-实战"><a href="#二-实战" class="headerlink" title="二.实战"></a>二.实战</h2><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#加载数据并预览</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npdata <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'data.csv'</span><span class="token punctuation">)</span>data<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200510223821680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#定义X和y</span>X <span class="token operator">=</span> data<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'labels'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>y <span class="token operator">=</span> data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'labels'</span><span class="token punctuation">]</span>y<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#预览</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200510223922797.png" alt=" "></p><pre class=" language-python"><code class="language-python">pd<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#查看类别数(这里有0，1，2三个类别) 以及每个类别对应的样本数</span></code></pre><p><img src="https://img-blog.csdnimg.cn/2020051022415925.png" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#导入数据以及数据可视化</span><span class="token operator">%</span>matplotlib inline<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> pltfig1 <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"un-labled data"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'V1'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'V2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200510224209484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#给出标签</span>fig1 <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>label0 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>label1 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>label2 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"labled data"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'V1'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'V2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">(</span>label0<span class="token punctuation">,</span>label1<span class="token punctuation">,</span>label2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'label0'</span><span class="token punctuation">,</span><span class="token string">'label1'</span><span class="token punctuation">,</span><span class="token string">'label2'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200510224259680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#建立模型</span><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">import</span> KMeansKM <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>KM<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200510224420922.png" alt=" "></p><p>#给出中心点<br>centers = KM.cluster_centers_</p><pre class=" language-python"><code class="language-python">fig3 <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>label0 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>label1 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>label2 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"labled data"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'V1'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'V2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">(</span>label0<span class="token punctuation">,</span>label1<span class="token punctuation">,</span>label2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'label0'</span><span class="token punctuation">,</span><span class="token string">'label1'</span><span class="token punctuation">,</span><span class="token string">'label2'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200510224638607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#测试数据: V1=80,V2=60</span>y_predict_test <span class="token operator">=</span> KM<span class="token punctuation">.</span>predict<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>y_predict_test<span class="token punctuation">)</span></code></pre><p>结果表明该数据属于类别1，即上图橙色部分，但事实上我们观察80，60这个数据发现，它更接近类别2，即绿色部分，之所以出现这种错误，是因为在建立模型时我们是不知道标签的，所以就出现了标签和类别不对应的情况，这是我们需要矫正结果。</p><p><img src="https://img-blog.csdnimg.cn/20200510224907648.png" alt=" "></p><pre class=" language-python"><code class="language-python">y_predict <span class="token operator">=</span> KM<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pd<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>y_predict<span class="token punctuation">)</span><span class="token punctuation">,</span>pd<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>这里来对比一下预测和原有的样本对应的标签（上为预测，下为原样）可以看到1标签应该修改为2，0应该修改为1，2应该修改为0。下面我们来进行矫正~</p><p><img src="https://img-blog.csdnimg.cn/20200510225223711.png" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_scoreaccuracy <span class="token operator">=</span> accuracy_score<span class="token punctuation">(</span>y<span class="token punctuation">,</span>y_predict<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>accuracy<span class="token punctuation">)</span></code></pre><p>可以看到此时准确率极低</p><p><img src="https://img-blog.csdnimg.cn/20200510225457519.png" alt=" "></p><pre class=" language-python"><code class="language-python">fig4 <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>label0 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y_predict<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y_predict<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>label1 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y_predict<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y_predict<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>label2 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y_predict<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y_predict<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"predicted data"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'V1'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'V2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">(</span>label0<span class="token punctuation">,</span>label1<span class="token punctuation">,</span>label2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'label0'</span><span class="token punctuation">,</span><span class="token string">'label1'</span><span class="token punctuation">,</span><span class="token string">'label2'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>fig5 <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>label0 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>label1 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>label2 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"labled data"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'V1'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'V2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">(</span>label0<span class="token punctuation">,</span>label1<span class="token punctuation">,</span>label2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'label0'</span><span class="token punctuation">,</span><span class="token string">'label1'</span><span class="token punctuation">,</span><span class="token string">'label2'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>通过图形对比可以明显看出差别</p><p><img src="https://img-blog.csdnimg.cn/20200510225543731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><p>#矫正结果</p><pre class=" language-python"><code class="language-python">y_corrected <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> y_predict<span class="token punctuation">:</span>    <span class="token keyword">if</span> i<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>        y_corrected<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> i<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>        y_corrected<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        y_corrected<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pd<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>y_corrected<span class="token punctuation">)</span><span class="token punctuation">,</span>pd<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>可以看到，结果已成功矫正</p><p><img src="https://img-blog.csdnimg.cn/20200510225628215.png" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>accuracy_score<span class="token punctuation">(</span>y<span class="token punctuation">,</span>y_corrected<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>准确率也非常高</p><p><img src="https://img-blog.csdnimg.cn/20200510225706469.png" alt=" "></p><pre class=" language-python"><code class="language-python">y_corrected <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>y_corrected<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>type<span class="token punctuation">(</span>y_corrected<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200510225747117.png" alt="在这里插入图片描述"></p><pre class=" language-python"><code class="language-python">fig6 <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>label0 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y_corrected<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y_corrected<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>label1 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y_corrected<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y_corrected<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>label2 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y_corrected<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y_corrected<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"corrected data"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'V1'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'V2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">(</span>label0<span class="token punctuation">,</span>label1<span class="token punctuation">,</span>label2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'label0'</span><span class="token punctuation">,</span><span class="token string">'label1'</span><span class="token punctuation">,</span><span class="token string">'label2'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>fig7 <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>label0 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>label1 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>label2 <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'V2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"labled data"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'V1'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'V2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">(</span>label0<span class="token punctuation">,</span>label1<span class="token punctuation">,</span>label2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'label0'</span><span class="token punctuation">,</span><span class="token string">'label1'</span><span class="token punctuation">,</span><span class="token string">'label2'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>通过图形很直观地看出无明显差别，分类也就完成了。</p><p><img src="https://img-blog.csdnimg.cn/20200510225850559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> K-Means </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习---逻辑回归:考试通过预测</title>
      <link href="/JustinLibo.github.io/2021/03/03/7094.html"/>
      <url>/JustinLibo.github.io/2021/03/03/7094.html</url>
      
        <content type="html"><![CDATA[<h3 id="什么时候用逻辑回归"><a href="#什么时候用逻辑回归" class="headerlink" title="什么时候用逻辑回归"></a>什么时候用逻辑回归</h3><p>我们想一想，当我们要解决一个分类问题，尤其是一个二分类问题时，如果我们用线性回归去解决就会面临这样一个问题：样本量变大后，准确率会下降。这时为了更好地解决这种分类问题，我们就需要采用逻辑回归的方法了。</p><h3 id="逻辑回归方程"><a href="#逻辑回归方程" class="headerlink" title="逻辑回归方程"></a>逻辑回归方程</h3><p>我们先看一看逻辑回归方程</p><p><img src="https://img-blog.csdnimg.cn/20200503163629651.png"></p><p><img src="https://img-blog.csdnimg.cn/20200503163309417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70"></p><p>可以发现当样本值越大y越接近1，样本值越小y越接近0，以0.5为分界点就可以将y分成以下两种情况。</p><p><img src="https://img-blog.csdnimg.cn/20200503163740957.png"></p><p>这时负样本就是0，正样本就是1，0和1就是我们给样本定义的标签。在考试通过问题中，可以用1代表通过（pass）,用0代表失败（failed），这样就可以通过标签0和1将失败和通过进行一个分类，就可以很好地解决二分类问题了。</p><p>当问题更复杂时，可以用g(x)代替x，然后就可以根据g(x)寻找最合适的决策边界从而解决二分类问题<br><img src="https://img-blog.csdnimg.cn/20200503170112969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70"></p><p>比如下面这个图形：<img src="https://img-blog.csdnimg.cn/20200503170607468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70"></p><p>此时虚线部分就是它的决策边界</p><p><img src="https://img-blog.csdnimg.cn/20200503170813600.png"></p><p><img src="https://img-blog.csdnimg.cn/20200503170919145.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/202005031709328.png" alt="在这里插入图片描述"></p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p><strong>任务:</strong></p><p><strong>基于examdata.csv数据，建立逻辑回归模型 预测Exam1 = 70, Exam2 = 60时，该同学在Exam3是 passed or failed; 建立二阶边界，提高模型准确度。</strong></p><p>先来建立一阶边界看看准确率：</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#加载数据</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npdata <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'examdata.csv'</span><span class="token punctuation">)</span>data<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#数据预览</span></code></pre><p><img src="https://img-blog.csdnimg.cn/2020050316474557.png"></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#可视化数据</span><span class="token operator">%</span>matplotlib inline<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt <span class="token comment" spellcheck="true">#导入相关包</span>fig1 <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#新建一个画布</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam1'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#导入数据</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Exam1-Exam2'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#图形名称</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Exam1'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#横坐标</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Exam2'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#纵坐标</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#展示图形</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503164836847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#添加标签</span>mask <span class="token operator">=</span> data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Pass'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token comment" spellcheck="true">#如果pass等于1就是true，否则就是false</span><span class="token keyword">print</span><span class="token punctuation">(</span>mask<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#预览  这里可以和最开始的数据预览图比较起来看，前五项Pass的值是0，0，0，1，1，所以这里前五项的结果就如下图所示了。</span></code></pre><p><img src="https://img-blog.csdnimg.cn/2020050316495633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#将通过考试和未通过考试的用图形来区分开</span>fig2 <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>passed <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>mask<span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>mask<span class="token punctuation">]</span><span class="token punctuation">)</span>failed <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">~</span>mask<span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">~</span>mask<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#这里的~mask是取反，可以理解为0</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Exam1-Exam2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Exam1'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Exam2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">(</span>passed<span class="token punctuation">,</span>failed<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'passed'</span><span class="token punctuation">,</span><span class="token string">'failed'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503165032932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#将数据赋值给相关变量</span>x <span class="token operator">=</span> data<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Pass'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#这里是去除pass那一列</span>y <span class="token operator">=</span> data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Pass'</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#将pass那一列的值赋给y</span>x1 <span class="token operator">=</span> data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam1'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#将Exam1那一列的值赋给x1</span>x2 <span class="token operator">=</span> data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam2'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#将Exam2那一列的值赋给x2</span>x1<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#这里以x1为例看一下预览效果，正确;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503165111299.png" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>shape<span class="token punctuation">,</span>y<span class="token punctuation">.</span>shape<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#看一下数据维度</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503165134681.png" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#建立模型以及训练模型</span><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LogisticRegressionLR <span class="token operator">=</span> LogisticRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>LR<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#训练模型</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503165152787.png" alt=" "></p><p>这里模型已经训练好了</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#预测结果</span>y_predict <span class="token operator">=</span> LR<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>y_predict<span class="token punctuation">)</span> </code></pre><p><img src="https://img-blog.csdnimg.cn/20200503165326491.png" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#预测结果</span><span class="token comment" spellcheck="true">#评估模型表现 看一下准确率</span><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_scoreaccuracy <span class="token operator">=</span> accuracy_score<span class="token punctuation">(</span>y<span class="token punctuation">,</span>y_predict<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>accuracy<span class="token punctuation">)</span> </code></pre><p><img src="https://img-blog.csdnimg.cn/20200503165401505.png" alt=" "></p><p>准确率达到了0.89，虽然感觉挺高的，但是判断错误的还是很多的</p><pre class=" language-python"><code class="language-python">LR<span class="token punctuation">.</span>intercept_ <span class="token comment" spellcheck="true">#截距</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503165756492.png" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#θo,θ1,θ2</span>theta0 <span class="token operator">=</span> LR<span class="token punctuation">.</span>intercept_theta1<span class="token punctuation">,</span>theta2 <span class="token operator">=</span> LR<span class="token punctuation">.</span>coef_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>LR<span class="token punctuation">.</span>coef_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>theta0<span class="token punctuation">,</span>theta1<span class="token punctuation">,</span>theta2<span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503171207715.png" alt=" "></p><pre class=" language-python"><code class="language-python">x2_new <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>theta0<span class="token operator">+</span>theta1<span class="token operator">*</span>x1<span class="token punctuation">)</span><span class="token operator">/</span>theta2<span class="token keyword">print</span><span class="token punctuation">(</span>x2_new<span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503171318690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><p>求解x2_new 时可参照以下公式：</p><p><img src="https://img-blog.csdnimg.cn/20200503171650737.png" alt=" "></p><pre class=" language-python"><code class="language-python">fig3 <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>passed<span class="token operator">=</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>mask<span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>mask<span class="token punctuation">]</span><span class="token punctuation">)</span>failed<span class="token operator">=</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">~</span>mask<span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">~</span>mask<span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x1<span class="token punctuation">,</span>x2_new<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#画出决策边界</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Exam1-Exam2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Exam1'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Exam2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">(</span>passed<span class="token punctuation">,</span>failed<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'passed'</span><span class="token punctuation">,</span><span class="token string">'failed'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>  </code></pre><p><img src="https://img-blog.csdnimg.cn/20200503171506590.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><p>然后我们来看一看建立的二阶边界函数的模型的效果</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#建立一个二阶的边界</span><span class="token comment" spellcheck="true">#创建新数据</span>x1_2 <span class="token operator">=</span> x1<span class="token operator">*</span>x1x2_2 <span class="token operator">=</span> x2<span class="token operator">*</span>x2x1_x2 <span class="token operator">=</span> x1<span class="token operator">*</span>x2</code></pre><pre class=" language-python"><code class="language-python">x_new <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'x1':x1,'x2':x2,'x1_2':x1_2,'x2_2':x2_2,'x1_x2':x1_x2&amp;#125;#将所有数据放到一个字典里面</span>x_new <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>x_new<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#方便后面进行模型数据的加载</span><span class="token keyword">print</span><span class="token punctuation">(</span>x_new<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#预览</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503172030398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#建立并训练一个新模型</span>LR2 <span class="token operator">=</span> LogisticRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>LR2<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x_new<span class="token punctuation">,</span>y<span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503172058487.png" alt=" "></p><p><img src="https://img-blog.csdnimg.cn/20200503172217431.png" alt="在这里插入图片描述"></p><p>准确率达到了百分之百，可以看处通过二阶边界建立的模型比通过一阶边界建立的模型准确率高很多。</p><pre class=" language-python"><code class="language-python">x1_new <span class="token operator">=</span> x1<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#将x1_new从小到大排序</span><span class="token keyword">print</span><span class="token punctuation">(</span>x1_new<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#预览</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503172409419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><p>这里是保证后面画图不出现交叉，使图形更好看、更直观</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#θo,θ1,θ2，θ3,θ4，θ5</span>theta0 <span class="token operator">=</span> LR2<span class="token punctuation">.</span>intercept_theta1<span class="token punctuation">,</span>theta2<span class="token punctuation">,</span>theta3<span class="token punctuation">,</span>theta4<span class="token punctuation">,</span>theta5 <span class="token operator">=</span> LR2<span class="token punctuation">.</span>coef_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>LR2<span class="token punctuation">.</span>coef_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>LR2<span class="token punctuation">.</span>coef_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>LR2<span class="token punctuation">.</span>coef_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>LR2<span class="token punctuation">.</span>coef_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>a <span class="token operator">=</span> theta4b <span class="token operator">=</span> theta5<span class="token operator">*</span>x1_new<span class="token operator">+</span>theta2c <span class="token operator">=</span> theta0<span class="token operator">+</span>theta1<span class="token operator">*</span>x1_new<span class="token operator">+</span>theta3<span class="token operator">*</span>x1_new<span class="token operator">*</span>x1_newx2_new_boundary <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span>b<span class="token operator">+</span>np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>b<span class="token operator">*</span>b<span class="token number">-4</span><span class="token operator">*</span>a<span class="token operator">*</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x2_new_boundary<span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503172607589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p><p>θo,θ1,θ2,θ3,θ4,θ5的求解可以根据以下公式：</p><p><img src="https://img-blog.csdnimg.cn/20200503173523673.png" alt=" "></p><p>因为成绩都是正数，所以就不用图中x2那个表达式了。</p><pre class=" language-python"><code class="language-python">fig5 <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>passed<span class="token operator">=</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>mask<span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>mask<span class="token punctuation">]</span><span class="token punctuation">)</span>failed<span class="token operator">=</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">~</span>mask<span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Exam2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">~</span>mask<span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x1_new<span class="token punctuation">,</span>x2_new_boundary<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#画出决策边界</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Exam1-Exam2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Exam1'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Exam2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">(</span>passed<span class="token punctuation">,</span>failed<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'passed'</span><span class="token punctuation">,</span><span class="token string">'failed'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200503172633648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70" alt=" "></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 逻辑回归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习---线性回归:房价预测</title>
      <link href="/JustinLibo.github.io/2021/03/03/7099.html"/>
      <url>/JustinLibo.github.io/2021/03/03/7099.html</url>
      
        <content type="html"><![CDATA[<h2 id="机器学习简介"><a href="#机器学习简介" class="headerlink" title="机器学习简介"></a>机器学习简介</h2><h3 id="小例"><a href="#小例" class="headerlink" title="小例"></a>小例</h3><p>先来简单举个例子吧！假如一家公司1月的利润为50万，然后每月增长5%，问其9月利润是多少。按照传统算法，我们知道了该公司1月的利润，知道了月增长率，就可以根据公式计算出相应的结果，而机器学习与传统算法不同的是机器学习是把月份、利润这些数据给到计算机，然后由计算机自动去求解一个函数关系进而求得结果。</p><p>传统算法：<br>1月利润+公式→计算机→结果</p><p>机器学习：<br>前几个月的月份+每月对应的利润→计算机→F（x）（计算机求得的函数关系）→结果</p><h3 id="简单定义"><a href="#简单定义" class="headerlink" title="简单定义"></a>简单定义</h3><p>然后来看看机器学习的一个简单定义吧~</p><p>机器学习是一种实现人工智能的方法<br>从数据中寻找规律、建立关系，然后根据建立的关系去解决问题<br>从数据中学习从而实现自我优化与升级</p><h3 id="机器学习的类别"><a href="#机器学习的类别" class="headerlink" title="机器学习的类别"></a>机器学习的类别</h3><p><strong>1.监督学习：</strong>在已有的数据集中，训练数据包括正确结果，知道输入数据与输出结果的关系，并可以根据这种关系建立一个关系模型，在获得新数据后，就可以根据这种关系输出对应结果。</p><p><strong>2.无监督学习：</strong>训练数据不包括正确结果，让计算机自己去数据中寻找规律。</p><p><strong>3.半监督学习：</strong>训练数据包含少量结果，可以理解为介于监督学习和无监督学习之间。</p><p><strong>4.强化学习：</strong>根据每次结果收获的奖惩进行学习，实现优化。就比如让机器人去做一件事，做得好就加5分，做的差就减5分，然后按照第一种方式做事获得的分比第二种方式高，那么机器人就知道第一种方式更好了。按照这种奖惩方式，程序就可以逐步寻找获得高分的方法了。</p><h2 id="房屋预测问题实战"><a href="#房屋预测问题实战" class="headerlink" title="房屋预测问题实战"></a>房屋预测问题实战</h2><p>基于usa_housing_price.csv数据，以人均收入、房屋年龄、房间数量、区域人口、房屋面积作为输入变量，来预测房屋价格。</p><p>好了话不多说，上代码！</p><p>这里的csv文件是提前下载好的</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#加载数据</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npdata <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'usa_housing_price.csv'</span><span class="token punctuation">)</span>data<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#预览数据。数据很多，预览数据只是预览前五项。</span></code></pre><p>预览结果：<br> <img src="https://img-blog.csdnimg.cn/20200426202010478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 再来看一下5个输入变量对应的散点图</p><pre class=" language-python"><code class="language-python"><span class="token operator">%</span>matplotlib inline<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt <span class="token comment" spellcheck="true">#导入相关库</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#这里是定义画布大小</span>fig1 <span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">231</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#231是指两行三列的第一个图，下面的232是指两行三列的第二个图，依次类推</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Avg. Area Income'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#获取数据，画出一个散点图</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Price VS Income'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#散点图的名称</span>fig2 <span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">232</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Avg. Area House Age'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Price VS House Age'</span><span class="token punctuation">)</span>fig3 <span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">233</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Avg. Area Number of Rooms'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Price VS Number of Rooms'</span><span class="token punctuation">)</span>fig4 <span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">234</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Area Population'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Price VS Area Population'</span><span class="token punctuation">)</span>fig5 <span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">235</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'size'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Price VS size'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#展示散点图</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200426203828505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>注意左上角的1e6是代表10的6次方，即2.5所代表值是2500000。</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#定义输入变量X_multi</span>X_multi <span class="token operator">=</span> data<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Price'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#去掉price所在列，因为有5个输入变量，输出结果只有1个，所以去掉price</span>y <span class="token operator">=</span> data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'Price'</span><span class="token punctuation">]</span>X_multi </code></pre><p>预览<br> <img src="https://img-blog.csdnimg.cn/20200426205103762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 可以看到这些数据是5000行5列的</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LinearRegression <span class="token comment" spellcheck="true">#导入相关库 </span>LR_multi <span class="token operator">=</span> LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#建立模型</span>LR_multi<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_multi<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#训练模型</span></code></pre><p>这里模型已经训练好了：<br> <img src="https://img-blog.csdnimg.cn/20200426211009693.png#pic_center" alt="在这里插入图片描述"></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#模型预测</span>y_predict_multi <span class="token operator">=</span> LR_multi<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_multi<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>y_predict_multi<span class="token punctuation">)</span></code></pre><p>预测结果：<img src="https://img-blog.csdnimg.cn/20200426211222733.png#pic_center" alt="在这里插入图片描述"></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#模型评估</span><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> mean_squared_error<span class="token punctuation">,</span>r2_scoremean_squared_error_multi <span class="token operator">=</span> mean_squared_error<span class="token punctuation">(</span>y<span class="token punctuation">,</span>y_predict_multi<span class="token punctuation">)</span>r2_score_multi <span class="token operator">=</span> r2_score<span class="token punctuation">(</span>y<span class="token punctuation">,</span>y_predict_multi<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>mean_squared_error_multi<span class="token punctuation">,</span>r2_score_multi<span class="token punctuation">)</span></code></pre><p>评估结果：<br> <img src="https://img-blog.csdnimg.cn/20200426211346526.png#pic_center" alt="在这里插入图片描述"><br> r2越接近1越好，这里达到0.91，模型还算不错</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#图形评估</span>fig6 <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>y<span class="token punctuation">,</span>y_predict_multi<span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200426211550875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM0NDM2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>这里y值和y的预测值接近一条45度的直线，可以看出差别不大</p><pre class=" language-python"><code class="language-python">X_test <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">66000</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">20000</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">]</span>X_test <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#将输入数据转化为数组</span><span class="token keyword">print</span><span class="token punctuation">(</span>X_test<span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">y_test_predict <span class="token operator">=</span> LR_multi<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>y_test_predict<span class="token punctuation">)</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200426211834375.png" alt="在这里插入图片描述"></p><p>自己输入一组数据，可以看到预测结果为114万多一点</p>]]></content>
      
      
      <categories>
          
          <category> 人工智能基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 线性回归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习联系:房价预测</title>
      <link href="/JustinLibo.github.io/2021/03/03/7097.html"/>
      <url>/JustinLibo.github.io/2021/03/03/7097.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 人工智能基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JupyterNotebook的优化与配置</title>
      <link href="/JustinLibo.github.io/2021/03/01/18760.html"/>
      <url>/JustinLibo.github.io/2021/03/01/18760.html</url>
      
        <content type="html"><![CDATA[<h2 id="Jupyter-Notebook使用"><a href="#Jupyter-Notebook使用" class="headerlink" title="Jupyter Notebook使用"></a>Jupyter Notebook使用</h2><p>在新建环境中安装<strong>Jupyter Notebook</strong></p><p>打开<code>Anacanda prompt</code>,键入<br><code>canda activate envy_name</code>，进入新建环境<br>键入<code>pip install Jupyter Notebook</code>。</p><p>建议先将pip升级为最新版本：<code>pip install --upgrade pip</code>。</p><p>也可在<strong>Anacanda</strong>中直接安装不过没有命令行观察直接。<br><strong>Jupyter Notebook</strong>的界面优化</p><p>安装<strong>jupyter-themes</strong>包</p><pre><code>https://github.com/dunovank/jupyter-themes</code></pre><p>在Anacanda prompt中键入<br>使用清华源下载速度会快很多。</p><pre><code>pip install --upgrade jupyterthemes -i https://pypi.tuna.tsinghua.edu.cn/simple/</code></pre><p>在安装过程中出现<br><strong>ERROR: Cannot uninstall [pacakage]. It is a distutils installed project…</strong><br>类似错误，就可以先使用<code>pip install --ignore-installed [package]</code>后，再装。也可在<code>E:\APP\A\Lib\site-packages</code>安装目录下删除所有带有**[pacakage]**的模块。</p><p>设置<strong>jupyter notebook</strong>样式</p><p>安装成功后可以先运行 <code>jt -h</code> 查看帮助文档<br>推荐设置的样式代码为</p><p><code>jt -t grade3 -f fira -fs 16 -cellw 90% -ofs 11 -dfs 11 -T</code></p><h2 id="在Jupyter-Notebook中显示汉字"><a href="#在Jupyter-Notebook中显示汉字" class="headerlink" title="在Jupyter Notebook中显示汉字"></a>在Jupyter Notebook中显示汉字</h2><p>在绘制散点图时，无法正常显示汉字<br><img src="https://img-blog.csdnimg.cn/20210126141052303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjUxMzQ2OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>插入如下两行代码即可解决：</p><pre class=" language-bash"><code class="language-bash">plt.rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span>plt.rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span> <span class="token operator">=</span> False</code></pre><br/><p>若出现以下错误<br>==用来正常显示中文标签显示错误代码plt.rcParams[‘font.sans-serif’] = [‘SimHei’]无法运行==<br>则有以下解决方法：<br>    1.  下载simhei.ttf字体，这里提供一个链接<a href="http://www.xiazaiziti.com/210356.html">SimHei.ttf</a><br>    2.  找到你的解释器的fonts文件夹下的ttf文件夹，例如我的解释器是Anaconda，在Anaconda的安装目录下，fonts文件夹的位置如上图的路径：D:\AnaInstallDir\Anaconda3\Lib\site-packages\ matplotlib\mpl-data\fonts\ttf。<br>    若解释器是自己安装的Python，文件夹的位置一般为：<br>    C:\Users\用户名\AppData\Local\Programs\ Python\ Python35\Lib\site-packages\matplotlib\mpl-data\fonts\ttf<br>    3. 将下载的SimHei.ttf文件放入ttf文件夹下再运行程序就OK啦（即代码plt.rcParams[‘font.sans-serif’] = [‘SimHei’]可以运行）</p><blockquote><p>参考链接：<a href="https://blog.csdn.net/xcjjenifer/article/details/105419979">https://blog.csdn.net/xcjjenifer/article/details/105419979</a></p></blockquote><br/>运行效果如下：<p><img src="https://img-blog.csdnimg.cn/20210126142136770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjUxMzQ2OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/JustinLibo.github.io/2021/02/25/16107.html"/>
      <url>/JustinLibo.github.io/2021/02/25/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda</title>
      <link href="/JustinLibo.github.io/2021/01/04/41489.html"/>
      <url>/JustinLibo.github.io/2021/01/04/41489.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-为什么要使用虚拟环境"><a href="#1-为什么要使用虚拟环境" class="headerlink" title="1.为什么要使用虚拟环境"></a>1.为什么要使用虚拟环境</h2><p>假如当前我们有多个项目A、B、C等等，这些项目中某些项目都需要使用一个相同的库，但是需要的版本却不一样，而这时不管哪个项目使用的都是默认的Python环境，对于这些项目我们只能运行其中一个，如果需要运行另外的项目，必须安装与之相匹配的版本的库。这时我们就可以创建一些完全独立的局部Python环境来实现一个项目使用一个“环境”，这个项目需要安装什么库，只需去其对应的环境中安装即可，这样项目之间就不会互相干扰了，项目的管理也会变得非常方便。</p><h2 id="2-conda创建虚拟环境"><a href="#2-conda创建虚拟环境" class="headerlink" title="2.conda创建虚拟环境"></a>2.conda创建虚拟环境</h2><p>在创建虚拟环境前，需要先下载<strong>Anaconda</strong>。<br>下载好以后，可以打开命令行输入<code>conda -V</code>检验<strong>conda</strong>是否安装成功以及当前安装的<strong>conda</strong>的版本信息。</p><p>创建虚拟环境：<br>打开命令行，使用<code>conda create -n env_name python=x.x</code>(这里输入你想要的版本，如3.5、3.6等)命令创建环境名为<code>env_name</code>的虚拟环境。（出现下图所示时输入y即可</p><p>创建好虚拟环境以后使用<code>conda activate env_name</code>（创建时的环境名）命令激活虚拟环境（注意:这是Windows下的激活命令）。激活后就可以使用<code>pip install xxx</code>（包名）命令在该虚拟环境下安装你需要的包了。安装好以后，可以使用<code>conda list</code>命令查看已安装的包的信息。若想要退出虚拟环境，输入c<code>onda deactivate</code>即可（同样也是Windows下的命令）。存在的虚拟环境可以在<strong>Anaconda</strong>安装目录里的<strong>envs</strong>文件下找到，也可以在命令行使用<code>conda env list</code> 或 <code>conda info -e</code>命令查看。</p><pre class=" language-html"><code class="language-html">删除虚拟环境及虚拟环境中的某个包删除虚拟环境:conda remove -n env_name --all删除虚拟环境中的某个包:conda remove --name env_name package_name</code></pre><h2 id="3-pip换源"><a href="#3-pip换源" class="headerlink" title="3.pip换源"></a>3.pip换源</h2><p>因为我们获取的包，默认是直接从pypi官网获取的，而pypi是国外的，所以网速很慢，这时我们换成国内镜像源就可以大大提高安装速度了。</p><p>这里是几个国内源<br>阿里云 <a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a></p><p>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a></p><p>豆瓣(douban) <a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a></p><p>清华大学 <a href="https://pypi.tuna.tsinghua.edu.cn/simple/">https://pypi.tuna.tsinghua.edu.cn/simple/</a></p><p>中国科学技术大学 <a href="http://pypi.mirrors.ustc.edu.cn/simple/">http://pypi.mirrors.ustc.edu.cn/simple/</a><br>  <br>这里以清华源为例。</p><p>临时换源:在安装命令后加上-i,指定一个pip源,。<br>eg: <code>pip install scrapy -i https://pypi.tuna.tsinghua.edu.cn/simple</code></p><p>永久换源:win+R 打开用户目录<code>%HOMEPATH%</code>，在此目录下创建 pip 文件夹，在 pip 目录下创建 pip.ini 文件, 内容如下:</p><pre class=" language-html"><code class="language-html">[global]timeout = 6000index-url = https://pypi.tuna.tsinghua.edu.cn/simpletrusted-host = pypi.tuna.tsinghua.edu.cn</code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人工智能与机器学习概念、应用、实现方法</title>
      <link href="/JustinLibo.github.io/2021/01/03/25359.html"/>
      <url>/JustinLibo.github.io/2021/01/03/25359.html</url>
      
        <content type="html"><![CDATA[<h1 id="人工智能概念、应用、实现方法"><a href="#人工智能概念、应用、实现方法" class="headerlink" title="人工智能概念、应用、实现方法"></a>人工智能概念、应用、实现方法</h1><h2 id="生活案例出发：身边的人工智能"><a href="#生活案例出发：身边的人工智能" class="headerlink" title="生活案例出发：身边的人工智能"></a><strong>生活案例出发：身边的人工智能</strong></h2><ol><li>人脸识别、自动驾驶、医疗图片诊断</li><li>智能机器人、AlphaGo</li><li>多语言翻译、智能客服、情感分类 </li></ol><p>​        </p><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><p><strong>人工智能—维基百科定义</strong></p><p><strong>人工智能</strong>，亦称<strong>智机器智能</strong>，指由人制造出来的机器所表现出来的智能。</p><p><strong>人工智能</strong>的核心问题包括建构能够跟人类似甚至超卓的推理、知识、规划、学习、交流、感知、移物、使用工具和操控机械的能力等</p><p>人工智能—核心关键词</p><p><img src="https://img-blog.csdnimg.cn/20201126115039316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RmbHlfeng=,size_16,color_FFFFFF,t_70"></p><p><strong>Intelligence:“The capacity to learn and solve problems ”</strong></p><p><strong>(自主学习及解决问题的能力)</strong></p><p><strong>Artificial Intelligence: The simulation of human intelligence by machines</strong></p><p> <strong>(机器对人类智能的模仿)</strong></p><h2 id="人工智能—核心定义"><a href="#人工智能—核心定义" class="headerlink" title="人工智能—核心定义"></a>人工智能—核心定义</h2><p>人工智能就其本质而言，是机器对人的思维或行为过程的模拟，让它能像人一样思考或行动</p><p>从过去的信息中寻找规律（经验），将规律或经验吸收，并为未来的判断或决策提供依据。</p><p><strong>核心点：学习、优化、决策</strong></p><p><strong>部分应用场景</strong></p><p><strong>AI安防：</strong>利用计算机视觉技术和大数据分析犯罪嫌疑人生活轨迹及可能出现的场所</p><p><strong>AI金融：</strong>利用复杂的 AI 系统能极其迅速的做出交易决策。</p><p><strong>AI工业制造：</strong>机器人代替工人在危险场所完成工作 ,在流水线上高效完成重复工作</p><h2 id="人工智能发展阶段"><a href="#人工智能发展阶段" class="headerlink" title="人工智能发展阶段"></a>人工智能发展阶段</h2><p><strong>通用人工智能（“强”人工智能）：</strong>具备与人类同等智慧、或超越人类的人工智能，能表现正常人类所具有的所有智能行为。</p><ul><li>目前AI技术无法达到通用人工智能</li><li>无法判断离通用人工智能还有多远</li></ul><p><strong>非通用人工智能（“弱”人工智能）：</strong>不需要具有人类完整的认知能力，甚至是完全不具有人类所拥有的感官认知能力</p><ul><li>可处理特定问题，在特定应用中很厉害</li><li>目前AI处于此阶段</li></ul><h2 id="人工智能实现方法：符号人工智能-amp-机器学习（Symbolic-Artificial-Intelligence-amp-Machine-learning"><a href="#人工智能实现方法：符号人工智能-amp-机器学习（Symbolic-Artificial-Intelligence-amp-Machine-learning" class="headerlink" title="人工智能实现方法：符号人工智能&amp;机器学习（Symbolic Artificial Intelligence &amp; Machine learning)"></a>人工智能实现方法：符号人工智能&amp;机器学习（Symbolic Artificial Intelligence &amp; Machine learning)</h2><h3 id="符号学习"><a href="#符号学习" class="headerlink" title="符号学习"></a>符号学习</h3><p>基于逻辑与规则的学习方法，用一些特定的符号来表示现实的事物或者观念(符号 不局限于图像文字，还包括了既定的逻辑、规则等）</p><p>➢ 根据既定的逻辑和顺序告诉机器 接下来做什么</p><p>➢ 遵循if…then…原则</p><p>𝑎 = 10, 𝑏 = 20 𝑐 =  𝑎 + 𝑏, 𝑖𝑓 𝑎 &gt; 𝑏； 𝑐 =𝑎 − 𝑏, 𝑖𝑓 𝑎 &lt; 𝑏</p><p>𝑐 = ? ?</p><p>**需要先知道或假设信息的逻辑、规律 **</p><h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h3><p>从数据中自动分析获得规律，并利用规律对未知数据进行预测或用于解决实际问题的方法。</p><p>➢从数据中学习规律，实现对原有推 理的更新，实现“自我优化”</p><p>➢ 现阶段主流的AI学习算法 </p><p>只要将数据给机器，机器会自动寻找a b c之间的关系。</p><h2 id="机器学习与深度学习的关系"><a href="#机器学习与深度学习的关系" class="headerlink" title="机器学习与深度学习的关系"></a>机器学习与深度学习的关系</h2><h3 id="机器学习是一种实现人工智能的方法，-深度学习是一种实现机器学习的技术。"><a href="#机器学习是一种实现人工智能的方法，-深度学习是一种实现机器学习的技术。" class="headerlink" title="机器学习是一种实现人工智能的方法， 深度学习是一种实现机器学习的技术。"></a>机器学习是一种实现人工智能的方法， 深度学习是一种实现机器学习的技术。</h3><p>机器学习：从数据中自动分析获得规律，并利 用规律对未知数据进行预测或用于解决实际问 题的方法。</p><p>深度学习：机器在对数据进行分析时，将引入 类人类神经结构模型，实现对复杂数据的理解 与推理，通常可应用于更为复杂的任务中。<br>机器学习概念、应用、实现方法</p><h3 id="现实问题思考：营业额预测"><a href="#现实问题思考：营业额预测" class="headerlink" title="现实问题思考：营业额预测"></a>现实问题思考：营业额预测</h3><p>店铺A第一周营业额为5000，每周增长10%，第10周是多少？</p><p><img src="https://img-blog.csdnimg.cn/202011261238201.png"></p><p><img src="https://img-blog.csdnimg.cn/20210303092401724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjUxMzQ2OQ==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20201126123912918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RmbHlfeng=,size_16,color_FFFFFF,t_70" style="zoom:20%;" />      <img src="https://img-blog.csdnimg.cn/20201126123919375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RmbHlfeng=,size_16,color_FFFFFF,t_70" style="zoom:30%;" /></p><h3 id="现实问题思考—自动图像分类"><a href="#现实问题思考—自动图像分类" class="headerlink" title="现实问题思考—自动图像分类"></a>现实问题思考—自动图像分类</h3><p>目标：以下六组图片，按照自己喜爱的方式分成两组<br>        <img src="https://img-blog.csdnimg.cn/20210303085910394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjUxMzQ2OQ==,size_16,color_FFFFFF,t_70"></p><p>分组一：站着或非站着</p><p>分组二：白色或黄色</p><p>分组三：吐舌头或不吐舌头</p><h2 id="机器学习应用与概念"><a href="#机器学习应用与概念" class="headerlink" title="机器学习应用与概念"></a>机器学习应用与概念</h2><p><strong>机器学习是一种实现人工智能的方法。</strong> 从数据中寻找规律、建立关系，根据建立的关系去解决问题。</p><h2 id="机器学习应用场景"><a href="#机器学习应用场景" class="headerlink" title="机器学习应用场景"></a>机器学习应用场景</h2><ul><li>数据挖掘     </li><li>无人驾驶</li><li>机器视觉</li><li>语言理解</li></ul><p><strong>实现人工智能的主流方法！</strong></p><h2 id="四大学习方法"><a href="#四大学习方法" class="headerlink" title="四大学习方法"></a>四大学习方法</h2><h3 id="•-监督学习-（Supervised-Learning）"><a href="#•-监督学习-（Supervised-Learning）" class="headerlink" title="• 监督学习 （Supervised Learning）:"></a>• 监督学习 （Supervised Learning）:</h3><p>在分类过程中，如果所有训练数据都有标签，则为有<strong>监督学习</strong>，用于分类或者回归。</p><h3 id="•-无监督学习（Unsupervised-Learning）"><a href="#•-无监督学习（Unsupervised-Learning）" class="headerlink" title="• 无监督学习（Unsupervised Learning）:"></a>• 无监督学习（Unsupervised Learning）:</h3><p>如果数据没有标签，显然就是<strong>无监督学习</strong>了，也即聚类（clustering）。</p><h3 id="•-半监督学习-Semi-supervised-Learning"><a href="#•-半监督学习-Semi-supervised-Learning" class="headerlink" title="• 半监督学习 (Semi-supervised Learning) :"></a>• 半监督学习 (Semi-supervised Learning) :</h3><p>其训练数据的一部分是有标签的，另一部分没有标签，而没标签数据的数量常常远远大于有标签数据数量（这也是符合现实情况的）。<br>隐藏在半监督学习下的基本规律在于：数据的分布必然不是完全随机的，通过一些有标签数据的局部特征，以及更多没标签数据的整体分布，就可以得到可以接受甚至是非常好的分类结果。</p><h3 id="•-强化学习-Reinforcement-Learning"><a href="#•-强化学习-Reinforcement-Learning" class="headerlink" title="• 强化学习 (Reinforcement Learning) :"></a>• 强化学习 (Reinforcement Learning) :</h3><p>强化学习是针对你再次没有标注数据集的情况而言的，但你还是有办法来区分是否越来越接近目标（回报函数（reward function））。经典的儿童游戏——“hotter or colder”。（Huckle Buckle Beanstalk的一个变体）是这个概念的一个很好的例证。你的任务是找到一个隐藏的目标物件，然后你的朋友会喊出你是否越来越hotter（更接近）或colder（远离）目标物件。“Hotter/colder”就是回报函数，而算法的目标就是最大化回报函数。你可以把回报函数当做是一种延迟和稀疏的标签数据形式：而不是在每个数据点中获得特定的“right/wrong”答案，你会得到一个延迟的反应，而它只会提示你是否在朝着目标方向前进。</p><h2 id="四大学习方法应用场景"><a href="#四大学习方法应用场景" class="headerlink" title="四大学习方法应用场景"></a>四大学习方法应用场景</h2><p><img src="https://img-blog.csdnimg.cn/202011261252548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RmbHlfeng=,size_16,color_FFFFFF,t_70"></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大四个人总结</title>
      <link href="/JustinLibo.github.io/2020/06/24/15280.html"/>
      <url>/JustinLibo.github.io/2020/06/24/15280.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 花津南路 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库三范式</title>
      <link href="/JustinLibo.github.io/2020/03/02/15177.html"/>
      <url>/JustinLibo.github.io/2020/03/02/15177.html</url>
      
        <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p><a href="https://blog.csdn.net/dh2442897094/article/details/105656952">https://blog.csdn.net/dh2442897094/article/details/105656952</a><br><a href="https://blog.csdn.net/qq_42351920/article/details/81303550">https://blog.csdn.net/qq_42351920/article/details/81303550</a></p></blockquote><h2 id="数据库设计三大范式"><a href="#数据库设计三大范式" class="headerlink" title="数据库设计三大范式"></a>数据库设计三大范式</h2><p>为了建立冗余较小、结构合理的数据库，设计数据库时必须遵循一定的规则。在关系型数据库中这种规则就称为范式。范式是符合某一种设计要求的总结。要想设计一个结构合理的关系型数据库，必须满足一定的范式。</p><ul><li>第一范式(确保每列保持原子性)；</li><li>第二范式(确保表中的每列都和主键相关)；</li><li>第三范式(确保每列都和主键列直接相关,而不是间接相关)；</li></ul><p>在实际开发中最为常见的设计范式有三个：</p><h3 id="第一范式（1NF）："><a href="#第一范式（1NF）：" class="headerlink" title="第一范式（1NF）："></a>第一范式（1NF）：</h3><p>要求数据库表的每一列都是不可分割的原子数据项。<br>第一范式是最基本的范式。如果数据库表中的所有字段值都是不可分解的原子值，就说明该数据库表满足了第一范式。<br> 第一范式的合理遵循需要根据系统的实际需求来定。比如某些数据库系统中需要用到“地址”这个属性，本来直接将“地址”属性设计成一个数据库表的字段就行。但是如果系统经常会访问“地址”属性中的“城市”部分，那么就非要将“地址”这个属性重新拆分为省份、城市、详细地址等多个部分进行存储，这样在对地址中某一部分操作的时候将非常方便。这样设计才算满足了数据库的第一范式，如下表所示。<br>举例说明：<br><img src="https://img-blog.csdnimg.cn/20210226001950477.png"><br>在上面的表中，“家庭信息”和“学校信息”列均不满足原子性的要求，故不满足第一范式，调整如下：可见，调整后的每一列都是不可再分的，因此满足第一范式（1NF）；<br><img src="https://img-blog.csdnimg.cn/20210226002036750.png"></p><h3 id="第二范式（2NF）："><a href="#第二范式（2NF）：" class="headerlink" title="第二范式（2NF）："></a>第二范式（2NF）：</h3><p> 第二范式需要确保数据库表中的每一列都和主键相关，而不能只与主键的某一部分相关（主要针对联合主键而言）。</p><p>在1NF的基础上，非码属性必须完全依赖于候选码（在1NF基础上消除非主属性对主码的部分函数依赖）。<br>也就是说在一个数据库表中，一个表中只能保存一种数据，不可以把多种数据保存在同一张数据库表中。<br>举例说明：<br><img src="https://img-blog.csdnimg.cn/20210226002406498.png">在上图所示的情况中，同一个订单中可能包含不同的产品，因此主键必须是“订单号”和“产品号”联合组成，但可以发现，产品数量、产品折扣、产品价格与“订单号”和“产品号”都相关，但是订单金额和订单时间仅与“订单号”相关，与“产品号”无关，<br>这样就不满足第二范式的要求，调整如下，需分成两个表：<br><img src="https://img-blog.csdnimg.cn/20210226002328894.png"><br><img src="https://img-blog.csdnimg.cn/20210226002338324.png"></p><h3 id="第三范式（3NF）："><a href="#第三范式（3NF）：" class="headerlink" title="第三范式（3NF）："></a>第三范式（3NF）：</h3><ul><li>第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关。<br> 在2NF基础上，任何非主属性不依赖于其它非主属性（在2NF基础上消除传递依赖）<br> 举例说明：<br> <img src="https://img-blog.csdnimg.cn/2021022600230888.png">上表中，所有属性都完全依赖于学号，所以满足第二范式，但是“班主任性别”和“班主任年龄”直接依赖的是“班主任姓名”，<br> 而不是主键“学号”，所以需做如下调整：<br> <img src="https://img-blog.csdnimg.cn/2021022600224291.png"><br> <img src="https://img-blog.csdnimg.cn/20210226002249838.png"><br> 这样以来，就满足了第三范式的要求。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用Hexo优雅的书写文章</title>
      <link href="/JustinLibo.github.io/2020/01/03/62216.html"/>
      <url>/JustinLibo.github.io/2020/01/03/62216.html</url>
      
        <content type="html"><![CDATA[<h2 id="了解文章目录"><a href="#了解文章目录" class="headerlink" title="了解文章目录"></a>了解文章目录</h2><p>所有的文章都是放在主目录下source文件下的_posts目录下的，<code>这里参考我的存放目录E:\mblog\source\_posts</code></p><p>这里作出两点说明：</p><ol><li><p>该目录下可以再创建目录，系统可以识别到多层文件夹中的文章，方便分类</p></li><li><p>如果用命令生成的新文章一定是在_posts主目录下</p></li></ol><h2 id="熟悉操作指令"><a href="#熟悉操作指令" class="headerlink" title="熟悉操作指令"></a>熟悉操作指令</h2><p>其实就是一句话，再把生成的文章拖到_posts目录下你自己创建的文件夹即可，文件后缀为.md</p><p><code>hexo n 你的文章名</code></p><p><strong>Tips</strong>： 如果嫌麻烦，复制<code>md</code>文件再粘贴也是个好办法</p><h2 id="开始书写文章"><a href="#开始书写文章" class="headerlink" title="开始书写文章"></a>开始书写文章</h2><p>写MarkDown这里推荐<strong>Typora</strong>，非常好用，点开创建的文件，先看看里面有啥<br><code>\---</code><br><code>title: typora-vue-theme主题介绍</code><br><code>date: 2018-09-07 09:25:00</code><br><code>\---</code></p><p>两个虚线之间的内容就是叫<code>Front-matter</code>，主要是你文章的配置，具体配置如下，这里不同主题不一样，我以<strong>Matery</strong>主题为例</p><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td>Markdown 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 _config.yml 中的 author</td><td>文章作者</td></tr><tr><td>img</td><td>featureImages 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <a href="http://xxx.com/xxx.jpg">http://xxx.com/xxx.jpg</a></td></tr><tr><td>top</td><td>true</td><td>推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</td></tr><tr><td>cover</td><td>false</td><td>v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td>v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项</td></tr><tr><td>toc</td><td>true</td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</td></tr><tr><td>mathjax</td><td>false</td><td>是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p>注意:<br>   1.如果 img 属性不填写的话，文章特色图会根据文章标题的 hashcode 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。<br>   2.date 的值尽量保证每篇文章是唯一的，因为本主题中 Gitalk 和 Gitment 识别 id 是通过 date 的值来作为唯一标识的。<br>   3.如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 _config.yml 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：开源中国在线工具、chahuo、站长工具。<br>   4.您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</p></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><p><strong>最全示例</strong></p><hr><hr><ul><li><pre class=" language-html"><code class="language-html">title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: /source/images/xxx.jpgtop: truecover: truecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown</code></pre></li></ul><hr><p><strong>Tips：你会发现一个问题，每次<code>hexo n</code>的时候<code>Front-matter</code>中内容少的可怜，那怎么修改默认的格式呢？只要去主目录下找到<code>scaffolds</code>文件夹下找到一个post.md文件修改即可</strong></p><h3 id="首行缩进方法"><a href="#首行缩进方法" class="headerlink" title="首行缩进方法"></a>首行缩进方法</h3><blockquote><p>由于markdowm会自动限定格式，所以<strong>缩进</strong>显得比较困难，通常我们使用Tab按键或者打空格实现的缩进都只能缩进一小部分，这时可以通过<strong>占位符</strong>实现更多的缩进效果，使得文章变得美观</p></blockquote><p>一个汉字占两个空格大小，所以使用四个空格就可以达到首行缩进两个汉字的效果。有如下几种方法：</p><ol><li><p>一个空格大小的表示：<code> </code>或<code> </code>，此时只要在相应需要缩进的段落前加上 <strong>4个</strong> 如上的标记即可，<strong>注意要带上分号</strong></p></li><li><p>两个空格的大小表示：<code> </code>或<code> </code>，同理，使用2个即可缩进2个汉字，<strong>推荐使用该方式</strong>。</p></li><li><p>不换行空格：<code> </code>或<code> </code>，使用4个<code> </code>即可。</p></li></ol><h4 id="范例"><a href="#范例" class="headerlink" title="范例"></a>范例</h4><p>不使用任何缩进效果</p><p> 使用<strong>Tab</strong>实现缩进</p><p>在前面<strong>打上很多空格</strong>实现缩进</p><p>  使用4个 &amp;#160 实现缩进</p><p>  使用2个 &amp;emsp 实现缩进</p><p>     使用 4个&amp;ensp 实现缩进</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建博客步骤</title>
      <link href="/JustinLibo.github.io/2020/01/01/63100.html"/>
      <url>/JustinLibo.github.io/2020/01/01/63100.html</url>
      
        <content type="html"><![CDATA[<h2 id="hexo简介"><a href="#hexo简介" class="headerlink" title="hexo简介"></a>hexo简介</h2><p><a href="https://hexo.io/">hexo</a> 自称为：快速、简洁且高效的博客框架。</p><p>笔者用起来确实还可以，大概介绍下几个特性：</p><ul><li>提供了不同的layout，可将文章存为草稿，需要时publish即可；</li><li>可维护全局的数据，在source/_data文件夹下添加yaml文件，通过site.data获取；</li><li>可指定文件的特有变量，通过<a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a>实现；</li><li>支持模板，在scaffolds文件夹下可自定义模板，并进行发布；</li><li>支持标签插件，可以在文章文件中使用标签%%来插入特定内容；</li><li>提供<a href="https://hexo.io/zh-cn/docs/commands">命令行操作</a>，如：hexo init初始化项目、hexo new新建文章、hexo pulish发布草稿文件、hexo generate生成静态文件、hexo server启动服务器；</li></ul><h2 id="hexo搭建博客步骤"><a href="#hexo搭建博客步骤" class="headerlink" title="hexo搭建博客步骤"></a>hexo搭建博客步骤</h2><ol><li>前提是必须安装好git和nodejs；</li><li>执行 “npm install -g hexo-cli”，安装好hexo；</li><li>选定文件夹，通过 “hexo init $folder” 初始化一个名为 $folder 的文件夹；</li><li>cd $folder, 再执行npm install，至此hexo的博客框架已经搭建完成！</li></ol><p>完成上述步骤后，可执行hexo server, 访问<a href="http://localhost:4000/">http://localhost:4000</a>, 会发现一个HelloWorld页面已经可以访问！</p><p><img src="https://cdn.jsdelivr.net/gh/JoruaChan/BlogImages/fast-build-blog/hexo_build_page.png"></p><h2 id="选用volantis主题"><a href="#选用volantis主题" class="headerlink" title="选用volantis主题"></a>选用volantis主题</h2><ol><li>设置项目使用的主题: 项目根目录下的_config.yml文件中设置 theme: volantis;</li><li>如果Hexo版本在5.0.2及以上，可以直接通过npm i hexo-theme-volantis进行安装；笔者为了项目的可读性，采用了源代码拷贝到theme文件夹的方案（记得删除.git文件夹,否则git提交时会出问题!）</li><li>按照依赖的插件：npm i hexo-generator-search hexo-generator-json-content(站内搜索)，npm i hexo-renderer-stylus（Stylus 渲染器）</li></ol><p><img src="https://cdn.jsdelivr.net/gh/JoruaChan/BlogImages/fast-build-blog/volantis_config.png"></p><p>完成上述步骤后执行hexo server, 访问<a href="http://localhost:4000/">http://localhost:4000</a>, 是不是发现端庄不失典雅的博客网站已经完成了！</p><p><img src="https://cdn.jsdelivr.net/gh/JoruaChan/BlogImages/fast-build-blog/volantis_preview.png"></p><h2 id="尝试新建文章"><a href="#尝试新建文章" class="headerlink" title="尝试新建文章"></a>尝试新建文章</h2><p>执行 hexo new post $newPostName，会在_post文件夹下新建一个名为$newPostName的md文件，一个新的文章便建立完成。</p><p>这时你只需要关注你的博文输出即可啦！</p><p><img src="https://cdn.jsdelivr.net/gh/JoruaChan/BlogImages/fast-build-blog/new_post.png" alt="newPost"></p><h2 id="发布至GitHub-Pages"><a href="#发布至GitHub-Pages" class="headerlink" title="发布至GitHub Pages"></a>发布至GitHub Pages</h2><p>如果你期望能通过GitHub Pages来访问你的博客网站，做如下几步：</p><ol><li>通过GitHub新建一个repository，名为：&lt;你的 GitHub 用户名&gt;.github.io；</li><li>本地检出该repository；</li><li>在博客源码的项目中执行命令：hexo generate –deploy，会生成public文件夹，该文件夹里便是博客所有的静态页面文件；</li><li>将public文件夹中的文件全部拷贝到新建repository的master分支下；</li><li>将master文件推送至远程master分支即可！</li><li>静待一会，访问：http://&lt;你的 GitHub 用户名&gt;.github.io便能访问你自定义的博客了！</li></ol><blockquote><p>如果你有自己的域名，可以在域名解析配置成 记录类型：CNAME，记录值：&lt;你的 GitHub 用户名&gt;.github.io。 注意了！！！ 此时还需要在GitHub Page项目中根目录下加上名为CNAME的文件，文件内容为你自己的域名。</p></blockquote><p>正如你看到的，搭建一个个人博客网站就是如此便捷！</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大三个人总结</title>
      <link href="/JustinLibo.github.io/2019/07/09/2666.html"/>
      <url>/JustinLibo.github.io/2019/07/09/2666.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 花津南路 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>花津南路(完....)</title>
      <link href="/JustinLibo.github.io/2019/05/31/7103.html"/>
      <url>/JustinLibo.github.io/2019/05/31/7103.html</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><ul><li>不知道什么时候的事情了, 对拍好看的照片总是有点向往</li><li>有台相机还是蛮好的 , 有空的时候也有动力跑出去瞎拍一通</li><li>不是配置狗 , 相机 Sony Nex 5T , 16-50 mm ,f3.5-5.6 , 七工匠 25mm f1.8</li><li>后期用的是LightRoom  (瞎调)</li></ul><h2 id="2019-06-11"><a href="#2019-06-11" class="headerlink" title="2019-06-11"></a>2019-06-11</h2><ul><li><p>镜湖</p><blockquote><p><img src="http://blog.chasingwind.top/611JH03.jpg"></p></blockquote><blockquote><p><img src="http://blog.chasingwind.top/611JH02.jpg"></p></blockquote><blockquote><p><img src="http://blog.chasingwind.top/611JH01.jpg"></p></blockquote></li><li><p>中江桥</p><blockquote><p><img src="http://blog.chasingwind.top/611ZJQ01.jpg"></p></blockquote><blockquote><p><img src="http://blog.chasingwind.top/611ZJQ02.jpg"></p></blockquote><blockquote><p><img src="http://blog.chasingwind.top/611ZJQ03.jpg"></p></blockquote><blockquote><p><img src="http://blog.chasingwind.top/611ZJQ04.jpg"></p></blockquote><ul><li>噪点奇多  看来是时候入手一个大光圈镜头了</li></ul><hr></li><li><p>Others</p><blockquote><p><img src="http://blog.chasingwind.top/611Others01.jpg"></p></blockquote><blockquote><p><img src="http://blog.chasingwind.top/611Others02.jpg"></p></blockquote><blockquote><p><img src="http://blog.chasingwind.top/611Others03.jpg"></p></blockquote></li></ul><h2 id="2019-06-16"><a href="#2019-06-16" class="headerlink" title="2019-06-16"></a>2019-06-16</h2><ul><li><p>学校的荷花</p><blockquote><p><img src="http://blog.chasingwind.top/616HH01.jpg"></p></blockquote><blockquote><p><img src="http://blog.chasingwind.top/616HH02.jpg"></p></blockquote></li></ul><h2 id="2019-06-21"><a href="#2019-06-21" class="headerlink" title="2019-06-21"></a>2019-06-21</h2><ul><li><p>八佰伴附近</p><blockquote><p><img src="http://blog.chasingwind.top/622BBB01.jpg"></p></blockquote><blockquote><p><img src="http://blog.chasingwind.top/622BBB02.jpg"></p></blockquote><blockquote><p><img src="http://blog.chasingwind.top/622BBB03.jpg"></p></blockquote><blockquote><p><img src="http://blog.chasingwind.top/622BBB04.jpg"></p></blockquote></li><li><p>AHNU赭山校区</p><blockquote><p><img src="http://blog.chasingwind.top/622ASD01.jpg"></p></blockquote><blockquote><p><img src="http://blog.chasingwind.top/622ASD02.jpg"></p></blockquote></li><li><p>夜晚的镜湖</p><blockquote><p><img src="http://blog.chasingwind.top/622JH01.jpg"></p></blockquote></li></ul><h2 id="2019-06-26"><a href="#2019-06-26" class="headerlink" title="2019-06-26"></a>2019-06-26</h2><ul><li><p>滨江公园</p><blockquote><p><img src="http://blog.chasingwind.top/626BJGY01.jpg"></p><p><img src="http://blog.chasingwind.top/626BJGY02.jpg"></p></blockquote></li><li><p>长江二桥</p><blockquote><p><img src="http://blog.chasingwind.top/626BJGY03.jpg"></p><p><img src="http://blog.chasingwind.top/626BJGY04.jpg"></p></blockquote></li><li><p>长江江景</p><blockquote><p><img src="http://blog.chasingwind.top/626BJGY05.jpg"></p><p><img src="http://blog.chasingwind.top/626BJGY07.jpg"></p><p><img src="http://blog.chasingwind.top/626BJGY09.jpg"></p><p><img src="http://blog.chasingwind.top/626BJGY08.jpg"></p></blockquote></li><li><p>世茂滨江</p><blockquote><p><img src="http://blog.chasingwind.top/626BJGY06.jpg"></p><p><img src="http://blog.chasingwind.top/626SMBJ01.jpg"></p><p><img src="http://blog.chasingwind.top/626SMBJ02.jpg"></p><p><img src="http://blog.chasingwind.top/626SMBJ03.jpg"></p><p><img src="http://blog.chasingwind.top/626SMBJ04.jpg"></p><p><img src="http://blog.chasingwind.top/626SMBJ05.jpg"></p><p><img src="http://blog.chasingwind.top/626SMBJ06.jpg"></p><p><img src="http://blog.chasingwind.top/626SMBJ07.jpg"></p><p><img src="http://blog.chasingwind.top/626SMBJ08.jpg"></p></blockquote></li><li><p>天主教堂</p><blockquote><p><img src="http://blog.chasingwind.top/626TZJT01.jpg"></p><p><img src="http://blog.chasingwind.top/626TZJT02.jpg"></p><p><img src="http://blog.chasingwind.top/626TZJT03.jpg"></p><p><img src="http://blog.chasingwind.top/626TZJT04.jpg"></p></blockquote></li><li><p>Others</p><blockquote><p><img src="http://blog.chasingwind.top/626Others01.jpg"></p><p><img src="http://blog.chasingwind.top/626Others02.jpg"></p><p><img src="http://blog.chasingwind.top/626Others03.jpg"></p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 旅行志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅行 </tag>
            
            <tag> 摄影 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
